name: Синхронизация артефактов в репозитории с DsTracker

on:
  push:
    branches: [main]

jobs:
  process-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          allow-prereleases: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r hooks/requirements.txt

      - name: Get changed files
        id: changed-files
        run: |
          # Новые файлы
          NEW_FILES=$(git diff --name-only --diff-filter=A HEAD^ HEAD || echo "")
          # Изменённые файлы
          MODIFIED_FILES=$(git diff --name-only --diff-filter=M HEAD^ HEAD || echo "")

          echo "NEW_FILES=${NEW_FILES}" >> $GITHUB_OUTPUT
          echo "MODIFIED_FILES=${MODIFIED_FILES}" >> $GITHUB_OUTPUT

          echo "New files: ${NEW_FILES}"
          echo "Modified files: ${MODIFIED_FILES}"

      - name: Extract repository name
        id: repo-name
        run: |
          REPO_NAME=$(echo "$GITHUB_REPOSITORY" | cut -d'/' -f2)
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_OUTPUT
    
          echo "Extracted repo name: $REPO_NAME"

      - name: Sync
        env:
          BOT_USERNAME: ${{ secrets.BOT_USERNAME }}
          BOT_PASSWORD: ${{ secrets.BOT_PASSWORD }}
          BOT_ID: ${{ secrets.BOT_ID }}
        run: |
          python hooks/main.py \
            --username "$BOT_USERNAME" \
            --password "$BOT_PASSWORD" \
            --id "$BOT_ID" \
            --repo_name "${{ steps.repo-name.outputs.REPO_NAME }}"
            --new "${{ steps.changed-files.outputs.NEW_FILES }}" \
            --modified "${{ steps.changed-files.outputs.MODIFIED_FILES }}"
